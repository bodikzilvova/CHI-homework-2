{"mappings":"AAAA,GAAG;AAEH,SAAS,mBAAmB,MAAM;IAChC,IAAI,QAAQ;IAEZ,OAAO,SAAU,IAAI;QACnB;QACA,OAAO;YACL,GAAG,MAAM;YACT;YACA;QACF;IACF;AACF;AAEA,MAAM,WAAW,mBAAmB;IAAE,gBAAgB;AAAS;AAE/D,MAAM,SAAS,SAAS;IAAE,MAAM;IAAU,KAAK;AAAG;AAClD,QAAQ,GAAG,CAAC;AAEZ,GAAG;AAEH,MAAM,MAAM;IACV,SAAS;QACP,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAChE;AACF;AAEA,IAAI,OAAO,CAAC,IAAI,CAAC;IAAE,MAAM;IAAS,KAAK;AAAG;AAE1C,SAAS,WAAW,IAAI,EAAE,GAAG;IAC3B,OAAO;QACL,IAAI,OAAO,CAAC,IAAI,CAAC;YAAE;YAAM;QAAI;IAC/B;AACF;AAEA,MAAM,qBAAqB,WAAW,QAAQ;AAC9C,mBAAmB,QAAQ;AAE3B,GAAG;AAEH,MAAM,OAAO;IACX,MAAM;IACN,MAAM;IACN,UAAU;QACR;YACE,MAAM;YACN,MAAM;YACN,UAAU;gBACR;oBACE,MAAM;oBACN,MAAM;oBACN,UAAU;wBACR;4BACE,MAAM;4BACN,MAAM;4BACN,MAAM;wBACR;qBACD;gBACH;aACD;QACH;QAEA;YACE,MAAM;YACN,MAAM;YACN,MAAM;QACR;QAEA;YACE,MAAM;YACN,MAAM;YACN,MAAM;QACR;KACD;AACH;AAEA,SAAS,UAAU,GAAG;IACpB,IAAI,QAAQ,EAAE;IAEd,IAAI,IAAI,IAAI,KAAK,QACf,MAAM,IAAI,CAAC,IAAI,IAAI;IAGrB,IAAI,IAAI,QAAQ,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,GACxC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpB,QAAQ,MAAM,MAAM,CAAC,UAAU;IACjC;IAEF,OAAO;AACT;AAEA,MAAM,YAAY,UAAU;AAC5B,QAAQ,GAAG,CAAC;AAEZ,GAAG;AAEH,MAAM;IACJ,YAAY,IAAI,EAAE,KAAK,CAAE;QACvB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA,YAAY;QACV,QAAQ,GAAG,CAAC,CAAC,6GAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,4DAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE;AACF;AAEA,MAAM,gBAAgB;IACpB,YAAY,IAAI,EAAE,KAAK,EAAE,MAAM,CAAE;QAC/B,KAAK,CAAC,MAAM;QACZ,IAAI,CAAC,MAAM,GAAG;IAChB;IAEA,QAAQ;QACN,QAAQ,GAAG,CAAC,CAAC,gFAAc,EAAE,IAAI,CAAC,MAAM,CAAC,qCAAO,CAAC;IACnD;AACF;AAEA,MAAM,gBAAgB;IACpB,YAAY,IAAI,EAAE,KAAK,EAAE,OAAO,CAAE;QAChC,KAAK,CAAC,MAAM;QACZ,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA,QAAQ;QACN,QAAQ,GAAG,CAAC,CAAC,iEAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3C;AACF;AAEA,MAAM,UAAU,IAAI,QAAQ,QAAQ,eAAe;AACnD,QAAQ,SAAS;AACjB,QAAQ,KAAK;AAEb,MAAM,UAAU,IAAI,QAAQ,QAAQ,eAAe;AACnD,QAAQ,SAAS;AACjB,QAAQ,KAAK","sources":["src/js/script.js"],"sourcesContent":["//1\r\n\r\nfunction addParamsToRequest(params) {\r\n  let count = 0;\r\n\r\n  return function (data) {\r\n    count++;\r\n    return {\r\n      ...params,\r\n      data,\r\n      count,\r\n    };\r\n  };\r\n}\r\n\r\nconst sendData = addParamsToRequest({ \"access-token\": \"qwerty\" });\r\n\r\nconst result = sendData({ name: \"Bohdan\", age: 26 });\r\nconsole.log(result);\r\n\r\n//2\r\n\r\nconst obj = {\r\n  getData: function () {\r\n    console.log(`Person name is: ${this.name} and age ${this.age}`);\r\n  },\r\n};\r\n\r\nobj.getData.call({ name: \"Yulia\", age: 18 });\r\n\r\nfunction personData(name, age) {\r\n  return function () {\r\n    obj.getData.call({ name, age });\r\n  };\r\n}\r\n\r\nconst showPersonDataInfo = personData(\"Mike\", 5);\r\nshowPersonDataInfo(\"Mike\", 5);\r\n\r\n//3\r\n\r\nconst root = {\r\n  name: \"name\",\r\n  type: \"folder\",\r\n  children: [\r\n    {\r\n      name: \"folder 1\",\r\n      type: \"folder\",\r\n      children: [\r\n        {\r\n          name: \"folder 2\",\r\n          type: \"folder\",\r\n          children: [\r\n            {\r\n              name: \"file 3\",\r\n              type: \"file\",\r\n              size: 30,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      name: \"file 1\",\r\n      type: \"file\",\r\n      size: 10,\r\n    },\r\n\r\n    {\r\n      name: \"file 2\",\r\n      type: \"file\",\r\n      size: 20,\r\n    },\r\n  ],\r\n};\r\n\r\nfunction findFiles(obj) {\r\n  let files = [];\r\n\r\n  if (obj.type === \"file\") {\r\n    files.push(obj.name);\r\n  }\r\n\r\n  if (obj.children && obj.children.length > 0) {\r\n    obj.children.forEach((child) => {\r\n      files = files.concat(findFiles(child));\r\n    });\r\n  }\r\n  return files;\r\n}\r\n\r\nconst fileNames = findFiles(root);\r\nconsole.log(fileNames);\r\n\r\n//4\r\n\r\nclass Human {\r\n  constructor(name, phone) {\r\n    this.name = name;\r\n    this.phone = phone;\r\n  }\r\n\r\n  introduce() {\r\n    console.log(`Привіт, мене звати ${this.name}, мій номер ${this.phone}.`);\r\n  }\r\n}\r\n\r\nclass Student extends Human {\r\n  constructor(name, phone, course) {\r\n    super(name, phone);\r\n    this.course = course;\r\n  }\r\n\r\n  study() {\r\n    console.log(`Я навчаюся на ${this.course} курсі.`);\r\n  }\r\n}\r\n\r\nclass Teacher extends Human {\r\n  constructor(name, phone, subject) {\r\n    super(name, phone);\r\n    this.subject = subject;\r\n  }\r\n\r\n  teach() {\r\n    console.log(`Я викладаю ${this.subject}.`);\r\n  }\r\n}\r\n\r\nconst student = new Student(\"Olha\", \"123-456-789\", 2);\r\nstudent.introduce();\r\nstudent.study();\r\n\r\nconst teacher = new Teacher(\"John\", \"987-654-321\", \"Physic\");\r\nteacher.introduce();\r\nteacher.teach();\r\n"],"names":[],"version":3,"file":"index.09c24910.js.map","sourceRoot":"/__parcel_source_root/"}